#!/usr/bin/env python3

from argparse import ArgumentParser
from importer import Importer
from pathlib import Path
import importlib.util
import os
import sys
import workbook

def main():

    actions = [
        'import',
        'reimport',
        'post',
        'gen-mergefiles',
        'merge-edits',
        'workbook',
    ]

    parser = ArgumentParser()
    parser.add_argument('action', choices=actions)
    parser.add_argument('files', nargs='*')
    parser.add_argument('--data-dir', default=os.environ.get('SLOWBOOKS_DATA', None))
    args = parser.parse_args()

    data_dir = Path(args.data_dir) if args.data_dir else None
    if not data_dir or not data_dir.is_dir():
        print(f'Data dir [{data_dir}] not found. Exiting')
        sys.exit(1)

    if args.action == 'import':
        _get_importer(data_dir).import_transactions()
    elif args.action == 'reimport':
        _get_importer(data_dir).import_transactions(args.files)
    elif args.action == 'post':
        _get_importer(data_dir).post_to_journal()
    elif args.action == 'merge-edits':
        _get_importer(data_dir).merge_edits()
    elif args.action == 'gen-mergefiles':
        _get_importer(data_dir).generate_mergefiles(args.files)
    elif args.action == 'workbook':
        workbook.run_workbook(data_dir)
    else:
        raise RuntimeError('Bad command')

def _get_importer(data_dir):
    parser_plugin_file = data_dir / 'user_code/parser_plugin.py'
    parser_plugin = None
    try:
        spec = importlib.util.spec_from_file_location('parser_plugin', parser_plugin_file)
        module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(module)
        parser_plugin = module.ParserPlugin()
    except Exception as e:
        print(f'Failed to load plugin from {parser_plugin_file}:')
        print(e)
        print('Continuing import with no user code.')

    return Importer(data_dir=data_dir,
                    parser_plugin=parser_plugin)

if __name__ == '__main__':
    main()
